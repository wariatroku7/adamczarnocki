/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

	var app = angular.module('upToWork',["xeditable"]);
	
	app.run(function(editableOptions) {
	  editableOptions.theme = 'bs3';
	});
	
	app.directive('generalInfo', function(){
	  return {
	    restrict: 'E',
	    templateUrl: './tpl/generalInfo.html'
	  };
	});
	app.directive('proExp', function(){
	  return {
	    restrict: 'E',
	    templateUrl: './tpl/proExp.html'
	  };
	});
	app.directive('skills', function(){
	  return {
	    restrict: 'E',
	    templateUrl: './tpl/skills.html'
	  };
	});
	app.directive('education', function(){
	  return {
	    restrict: 'E',
	    templateUrl: './tpl/education.html'
	  };
	});
	app.directive('courses', function(){
	  return {
	    restrict: 'E',
	    templateUrl: './tpl/courses.html'
	  };
	});
	app.directive('interests', function(){
	  return {
	    restrict: 'E',
	    templateUrl: './tpl/interests.html'
	  };
	});
	
	
	app.controller('generalInfoCtrl', function($scope, $http) {
	    $http({
	        method : "GET",
	        url : "/json/generalInfo.json"
	    }).then(function mySuccess(response) {
	        $scope.info = response.data;
	    }, function myError(response) {
	        $scope.info = response.statusText;
	    });
	
	    $scope.editorEnabled = false;
	
	    $scope.enableEditor = function() {
	      $scope.editorEnabled = true;
	      $scope.editableTitle = $scope.info.name;
	      $scope.editablePosition = $scope.info.position;
	      $scope.editablePhone = $scope.info.phone;
	      $scope.editableMail = $scope.info.mail;
	      $scope.editableBirthday = $scope.info.birthday;
	      $scope.editableLocation = $scope.info.location;
	    };
	
	    $scope.disableEditor = function() {
	      $scope.editorEnabled = false;
	    };
	
	    $scope.save = function() {
	      $scope.info.name = $scope.editableTitle;
	      $scope.info.position = $scope.editablePosition;
	      $scope.info.phone = $scope.editablePhone;
	      $scope.info.mail = $scope.editableMail;
	      $scope.info.birthday = $scope.editableBirthday;
	      $scope.info.location = $scope.editableLocation;
	      $scope.disableEditor();
	    };
	});
	
	app.controller('proExpCtrl', function($scope, $http) {
	    $http({
	        method : "GET",
	        url : "/json/proExp.json"
	    }).then(function mySuccess(response) {
	        $scope.exps = response.data;
	    }, function myError(response) {
	        $scope.exps = response.statusText;
	    });
	
	    $scope.editorEnabled = false;
	
	    $scope.enableEditor = function() {
	      $scope.editorEnabled = true;
	      $scope.editablePosition = $scope.exps.position;
	      $scope.editableCompany = $scope.exps.company;
	      $scope.editableStart = $scope.exps.start;
	      $scope.editableEnd = $scope.exps.end;
	      $scope.editableTask0 = $scope.exps.tasks[0].desc;
	      $scope.editableTask1 = $scope.exps.tasks[1].desc;
	      $scope.editableTask2 = $scope.exps.tasks[2].desc;
	      $scope.editableTask3 = $scope.exps.tasks[3].desc;
	      $scope.editableTask4 = $scope.exps.tasks[4].desc;
	    };
	
	    $scope.disableEditor = function() {
	      $scope.editorEnabled = false;
	    };
	
	    $scope.save = function() {
	      $scope.exps.position = $scope.editablePosition;
	      $scope.exps.company = $scope.editableCompany;
	      $scope.exps.start = $scope.editableStart;
	      $scope.exps.end = $scope.editableEnd;
	      $scope.exps.tasks[0].desc = $scope.editableTask0;
	      $scope.exps.tasks[1].desc = $scope.editableTask1;
	      $scope.exps.tasks[2].desc = $scope.editableTask2;
	      $scope.exps.tasks[3].desc = $scope.editableTask3;
	      $scope.exps.tasks[4].desc = $scope.editableTask4;
	      $scope.disableEditor();
	    };
	});
	
	
	//Xeditable controller for the table with skills
	app.controller('EditableTableCtrl', function($scope, $filter, $http, $q) {
	  $scope.users = [
	    {id: 1, name: 'HTML5 & SASS & CSS3 & Bootstrap', status: 1},
	    {id: 2, name: 'jQuery & Javascript & AngularJS', status: 2},
	    {id: 3, name: 'PHP & MySQL & Wordpress', status: 3}
	  ];
	
	  $scope.statuses = [
	    {value: 1, text: 'Advanced'},
	    {value: 2, text: 'Intermediate'},
	    {value: 3, text: 'Basic'}
	  ];
	
	  $scope.showStatus = function(user) {
	    var selected = [];
	    if(user.status) {
	      selected = $filter('filter')($scope.statuses, {value: user.status});
	    }
	    return selected.length ? selected[0].text : 'Not set';
	  };
	
	  // filter users to show
	  $scope.filterUser = function(user) {
	    return user.isDeleted !== true;
	  };
	
	  // mark user as deleted
	  $scope.deleteUser = function(id) {
	    var filtered = $filter('filter')($scope.users, {id: id});
	    if (filtered.length) {
	      filtered[0].isDeleted = true;
	    }
	  };
	
	  // add user
	  $scope.addUser = function() {
	    $scope.users.push({
	      id: $scope.users.length+1,
	      name: '',
	      status: null,
	      group: null,
	      isNew: true
	    });
	  };
	
	  // cancel all changes
	  $scope.cancel = function() {
	    for (var i = $scope.users.length; i--;) {
	      var user = $scope.users[i];
	      // undelete
	      if (user.isDeleted) {
	        delete user.isDeleted;
	      }
	      // remove new
	      if (user.isNew) {
	        $scope.users.splice(i, 1);
	      }
	    };
	  };
	
	  // save edits
	  $scope.saveTable = function() {
	    var results = [];
	    for (var i = $scope.users.length; i--;) {
	      var user = $scope.users[i];
	      // actually delete user
	      if (user.isDeleted) {
	        $scope.users.splice(i, 1);
	      }
	      // mark as not new
	      if (user.isNew) {
	        user.isNew = false;
	      }
	
	    }
	
	    return $q.all(results);
	  };
	});


/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgNzYwZjhlZGNiMTUyMjgxNmRhMzEiLCJ3ZWJwYWNrOi8vLy4vanMvYXBwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1QkFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7O0FDdENBOztBQUVBO0FBQ0E7QUFDQSxFQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBQzs7O0FBR0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQSxNQUFLO0FBQ0w7QUFDQSxNQUFLOztBQUVMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBLE1BQUs7QUFDTDtBQUNBLE1BQUs7O0FBRUw7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFDOzs7QUFHRDtBQUNBO0FBQ0E7QUFDQSxNQUFLLDBEQUEwRDtBQUMvRCxNQUFLLDBEQUEwRDtBQUMvRCxNQUFLO0FBQ0w7O0FBRUE7QUFDQSxNQUFLLDJCQUEyQjtBQUNoQyxNQUFLLCtCQUErQjtBQUNwQyxNQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0RBQXFELG1CQUFtQjtBQUN4RTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFEQUFvRCxPQUFPO0FBQzNEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBLHNDQUFxQyxLQUFLO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0NBQXFDLEtBQUs7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxFQUFDIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcblxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0ZXhwb3J0czoge30sXG4gXHRcdFx0aWQ6IG1vZHVsZUlkLFxuIFx0XHRcdGxvYWRlZDogZmFsc2VcbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubG9hZGVkID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCA3NjBmOGVkY2IxNTIyODE2ZGEzMSIsInZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgndXBUb1dvcmsnLFtcInhlZGl0YWJsZVwiXSk7XHJcblxyXG5hcHAucnVuKGZ1bmN0aW9uKGVkaXRhYmxlT3B0aW9ucykge1xyXG4gIGVkaXRhYmxlT3B0aW9ucy50aGVtZSA9ICdiczMnO1xyXG59KTtcclxuXHJcbmFwcC5kaXJlY3RpdmUoJ2dlbmVyYWxJbmZvJywgZnVuY3Rpb24oKXtcclxuICByZXR1cm4ge1xyXG4gICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi90cGwvZ2VuZXJhbEluZm8uaHRtbCdcclxuICB9O1xyXG59KTtcclxuYXBwLmRpcmVjdGl2ZSgncHJvRXhwJywgZnVuY3Rpb24oKXtcclxuICByZXR1cm4ge1xyXG4gICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi90cGwvcHJvRXhwLmh0bWwnXHJcbiAgfTtcclxufSk7XHJcbmFwcC5kaXJlY3RpdmUoJ3NraWxscycsIGZ1bmN0aW9uKCl7XHJcbiAgcmV0dXJuIHtcclxuICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vdHBsL3NraWxscy5odG1sJ1xyXG4gIH07XHJcbn0pO1xyXG5hcHAuZGlyZWN0aXZlKCdlZHVjYXRpb24nLCBmdW5jdGlvbigpe1xyXG4gIHJldHVybiB7XHJcbiAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL3RwbC9lZHVjYXRpb24uaHRtbCdcclxuICB9O1xyXG59KTtcclxuYXBwLmRpcmVjdGl2ZSgnY291cnNlcycsIGZ1bmN0aW9uKCl7XHJcbiAgcmV0dXJuIHtcclxuICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vdHBsL2NvdXJzZXMuaHRtbCdcclxuICB9O1xyXG59KTtcclxuYXBwLmRpcmVjdGl2ZSgnaW50ZXJlc3RzJywgZnVuY3Rpb24oKXtcclxuICByZXR1cm4ge1xyXG4gICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi90cGwvaW50ZXJlc3RzLmh0bWwnXHJcbiAgfTtcclxufSk7XHJcblxyXG5cclxuYXBwLmNvbnRyb2xsZXIoJ2dlbmVyYWxJbmZvQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJGh0dHApIHtcclxuICAgICRodHRwKHtcclxuICAgICAgICBtZXRob2QgOiBcIkdFVFwiLFxyXG4gICAgICAgIHVybCA6IFwiL2pzb24vZ2VuZXJhbEluZm8uanNvblwiXHJcbiAgICB9KS50aGVuKGZ1bmN0aW9uIG15U3VjY2VzcyhyZXNwb25zZSkge1xyXG4gICAgICAgICRzY29wZS5pbmZvID0gcmVzcG9uc2UuZGF0YTtcclxuICAgIH0sIGZ1bmN0aW9uIG15RXJyb3IocmVzcG9uc2UpIHtcclxuICAgICAgICAkc2NvcGUuaW5mbyA9IHJlc3BvbnNlLnN0YXR1c1RleHQ7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkc2NvcGUuZWRpdG9yRW5hYmxlZCA9IGZhbHNlO1xyXG5cclxuICAgICRzY29wZS5lbmFibGVFZGl0b3IgPSBmdW5jdGlvbigpIHtcclxuICAgICAgJHNjb3BlLmVkaXRvckVuYWJsZWQgPSB0cnVlO1xyXG4gICAgICAkc2NvcGUuZWRpdGFibGVUaXRsZSA9ICRzY29wZS5pbmZvLm5hbWU7XHJcbiAgICAgICRzY29wZS5lZGl0YWJsZVBvc2l0aW9uID0gJHNjb3BlLmluZm8ucG9zaXRpb247XHJcbiAgICAgICRzY29wZS5lZGl0YWJsZVBob25lID0gJHNjb3BlLmluZm8ucGhvbmU7XHJcbiAgICAgICRzY29wZS5lZGl0YWJsZU1haWwgPSAkc2NvcGUuaW5mby5tYWlsO1xyXG4gICAgICAkc2NvcGUuZWRpdGFibGVCaXJ0aGRheSA9ICRzY29wZS5pbmZvLmJpcnRoZGF5O1xyXG4gICAgICAkc2NvcGUuZWRpdGFibGVMb2NhdGlvbiA9ICRzY29wZS5pbmZvLmxvY2F0aW9uO1xyXG4gICAgfTtcclxuXHJcbiAgICAkc2NvcGUuZGlzYWJsZUVkaXRvciA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAkc2NvcGUuZWRpdG9yRW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgfTtcclxuXHJcbiAgICAkc2NvcGUuc2F2ZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAkc2NvcGUuaW5mby5uYW1lID0gJHNjb3BlLmVkaXRhYmxlVGl0bGU7XHJcbiAgICAgICRzY29wZS5pbmZvLnBvc2l0aW9uID0gJHNjb3BlLmVkaXRhYmxlUG9zaXRpb247XHJcbiAgICAgICRzY29wZS5pbmZvLnBob25lID0gJHNjb3BlLmVkaXRhYmxlUGhvbmU7XHJcbiAgICAgICRzY29wZS5pbmZvLm1haWwgPSAkc2NvcGUuZWRpdGFibGVNYWlsO1xyXG4gICAgICAkc2NvcGUuaW5mby5iaXJ0aGRheSA9ICRzY29wZS5lZGl0YWJsZUJpcnRoZGF5O1xyXG4gICAgICAkc2NvcGUuaW5mby5sb2NhdGlvbiA9ICRzY29wZS5lZGl0YWJsZUxvY2F0aW9uO1xyXG4gICAgICAkc2NvcGUuZGlzYWJsZUVkaXRvcigpO1xyXG4gICAgfTtcclxufSk7XHJcblxyXG5hcHAuY29udHJvbGxlcigncHJvRXhwQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJGh0dHApIHtcclxuICAgICRodHRwKHtcclxuICAgICAgICBtZXRob2QgOiBcIkdFVFwiLFxyXG4gICAgICAgIHVybCA6IFwiL2pzb24vcHJvRXhwLmpzb25cIlxyXG4gICAgfSkudGhlbihmdW5jdGlvbiBteVN1Y2Nlc3MocmVzcG9uc2UpIHtcclxuICAgICAgICAkc2NvcGUuZXhwcyA9IHJlc3BvbnNlLmRhdGE7XHJcbiAgICB9LCBmdW5jdGlvbiBteUVycm9yKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgJHNjb3BlLmV4cHMgPSByZXNwb25zZS5zdGF0dXNUZXh0O1xyXG4gICAgfSk7XHJcblxyXG4gICAgJHNjb3BlLmVkaXRvckVuYWJsZWQgPSBmYWxzZTtcclxuXHJcbiAgICAkc2NvcGUuZW5hYmxlRWRpdG9yID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICRzY29wZS5lZGl0b3JFbmFibGVkID0gdHJ1ZTtcclxuICAgICAgJHNjb3BlLmVkaXRhYmxlUG9zaXRpb24gPSAkc2NvcGUuZXhwcy5wb3NpdGlvbjtcclxuICAgICAgJHNjb3BlLmVkaXRhYmxlQ29tcGFueSA9ICRzY29wZS5leHBzLmNvbXBhbnk7XHJcbiAgICAgICRzY29wZS5lZGl0YWJsZVN0YXJ0ID0gJHNjb3BlLmV4cHMuc3RhcnQ7XHJcbiAgICAgICRzY29wZS5lZGl0YWJsZUVuZCA9ICRzY29wZS5leHBzLmVuZDtcclxuICAgICAgJHNjb3BlLmVkaXRhYmxlVGFzazAgPSAkc2NvcGUuZXhwcy50YXNrc1swXS5kZXNjO1xyXG4gICAgICAkc2NvcGUuZWRpdGFibGVUYXNrMSA9ICRzY29wZS5leHBzLnRhc2tzWzFdLmRlc2M7XHJcbiAgICAgICRzY29wZS5lZGl0YWJsZVRhc2syID0gJHNjb3BlLmV4cHMudGFza3NbMl0uZGVzYztcclxuICAgICAgJHNjb3BlLmVkaXRhYmxlVGFzazMgPSAkc2NvcGUuZXhwcy50YXNrc1szXS5kZXNjO1xyXG4gICAgICAkc2NvcGUuZWRpdGFibGVUYXNrNCA9ICRzY29wZS5leHBzLnRhc2tzWzRdLmRlc2M7XHJcbiAgICB9O1xyXG5cclxuICAgICRzY29wZS5kaXNhYmxlRWRpdG9yID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICRzY29wZS5lZGl0b3JFbmFibGVkID0gZmFsc2U7XHJcbiAgICB9O1xyXG5cclxuICAgICRzY29wZS5zYXZlID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICRzY29wZS5leHBzLnBvc2l0aW9uID0gJHNjb3BlLmVkaXRhYmxlUG9zaXRpb247XHJcbiAgICAgICRzY29wZS5leHBzLmNvbXBhbnkgPSAkc2NvcGUuZWRpdGFibGVDb21wYW55O1xyXG4gICAgICAkc2NvcGUuZXhwcy5zdGFydCA9ICRzY29wZS5lZGl0YWJsZVN0YXJ0O1xyXG4gICAgICAkc2NvcGUuZXhwcy5lbmQgPSAkc2NvcGUuZWRpdGFibGVFbmQ7XHJcbiAgICAgICRzY29wZS5leHBzLnRhc2tzWzBdLmRlc2MgPSAkc2NvcGUuZWRpdGFibGVUYXNrMDtcclxuICAgICAgJHNjb3BlLmV4cHMudGFza3NbMV0uZGVzYyA9ICRzY29wZS5lZGl0YWJsZVRhc2sxO1xyXG4gICAgICAkc2NvcGUuZXhwcy50YXNrc1syXS5kZXNjID0gJHNjb3BlLmVkaXRhYmxlVGFzazI7XHJcbiAgICAgICRzY29wZS5leHBzLnRhc2tzWzNdLmRlc2MgPSAkc2NvcGUuZWRpdGFibGVUYXNrMztcclxuICAgICAgJHNjb3BlLmV4cHMudGFza3NbNF0uZGVzYyA9ICRzY29wZS5lZGl0YWJsZVRhc2s0O1xyXG4gICAgICAkc2NvcGUuZGlzYWJsZUVkaXRvcigpO1xyXG4gICAgfTtcclxufSk7XHJcblxyXG5cclxuLy9YZWRpdGFibGUgY29udHJvbGxlciBmb3IgdGhlIHRhYmxlIHdpdGggc2tpbGxzXHJcbmFwcC5jb250cm9sbGVyKCdFZGl0YWJsZVRhYmxlQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJGZpbHRlciwgJGh0dHAsICRxKSB7XHJcbiAgJHNjb3BlLnVzZXJzID0gW1xyXG4gICAge2lkOiAxLCBuYW1lOiAnSFRNTDUgJiBTQVNTICYgQ1NTMyAmIEJvb3RzdHJhcCcsIHN0YXR1czogMX0sXHJcbiAgICB7aWQ6IDIsIG5hbWU6ICdqUXVlcnkgJiBKYXZhc2NyaXB0ICYgQW5ndWxhckpTJywgc3RhdHVzOiAyfSxcclxuICAgIHtpZDogMywgbmFtZTogJ1BIUCAmIE15U1FMICYgV29yZHByZXNzJywgc3RhdHVzOiAzfVxyXG4gIF07XHJcblxyXG4gICRzY29wZS5zdGF0dXNlcyA9IFtcclxuICAgIHt2YWx1ZTogMSwgdGV4dDogJ0FkdmFuY2VkJ30sXHJcbiAgICB7dmFsdWU6IDIsIHRleHQ6ICdJbnRlcm1lZGlhdGUnfSxcclxuICAgIHt2YWx1ZTogMywgdGV4dDogJ0Jhc2ljJ31cclxuICBdO1xyXG5cclxuICAkc2NvcGUuc2hvd1N0YXR1cyA9IGZ1bmN0aW9uKHVzZXIpIHtcclxuICAgIHZhciBzZWxlY3RlZCA9IFtdO1xyXG4gICAgaWYodXNlci5zdGF0dXMpIHtcclxuICAgICAgc2VsZWN0ZWQgPSAkZmlsdGVyKCdmaWx0ZXInKSgkc2NvcGUuc3RhdHVzZXMsIHt2YWx1ZTogdXNlci5zdGF0dXN9KTtcclxuICAgIH1cclxuICAgIHJldHVybiBzZWxlY3RlZC5sZW5ndGggPyBzZWxlY3RlZFswXS50ZXh0IDogJ05vdCBzZXQnO1xyXG4gIH07XHJcblxyXG4gIC8vIGZpbHRlciB1c2VycyB0byBzaG93XHJcbiAgJHNjb3BlLmZpbHRlclVzZXIgPSBmdW5jdGlvbih1c2VyKSB7XHJcbiAgICByZXR1cm4gdXNlci5pc0RlbGV0ZWQgIT09IHRydWU7XHJcbiAgfTtcclxuXHJcbiAgLy8gbWFyayB1c2VyIGFzIGRlbGV0ZWRcclxuICAkc2NvcGUuZGVsZXRlVXNlciA9IGZ1bmN0aW9uKGlkKSB7XHJcbiAgICB2YXIgZmlsdGVyZWQgPSAkZmlsdGVyKCdmaWx0ZXInKSgkc2NvcGUudXNlcnMsIHtpZDogaWR9KTtcclxuICAgIGlmIChmaWx0ZXJlZC5sZW5ndGgpIHtcclxuICAgICAgZmlsdGVyZWRbMF0uaXNEZWxldGVkID0gdHJ1ZTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICAvLyBhZGQgdXNlclxyXG4gICRzY29wZS5hZGRVc2VyID0gZnVuY3Rpb24oKSB7XHJcbiAgICAkc2NvcGUudXNlcnMucHVzaCh7XHJcbiAgICAgIGlkOiAkc2NvcGUudXNlcnMubGVuZ3RoKzEsXHJcbiAgICAgIG5hbWU6ICcnLFxyXG4gICAgICBzdGF0dXM6IG51bGwsXHJcbiAgICAgIGdyb3VwOiBudWxsLFxyXG4gICAgICBpc05ldzogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgLy8gY2FuY2VsIGFsbCBjaGFuZ2VzXHJcbiAgJHNjb3BlLmNhbmNlbCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgZm9yICh2YXIgaSA9ICRzY29wZS51c2Vycy5sZW5ndGg7IGktLTspIHtcclxuICAgICAgdmFyIHVzZXIgPSAkc2NvcGUudXNlcnNbaV07XHJcbiAgICAgIC8vIHVuZGVsZXRlXHJcbiAgICAgIGlmICh1c2VyLmlzRGVsZXRlZCkge1xyXG4gICAgICAgIGRlbGV0ZSB1c2VyLmlzRGVsZXRlZDtcclxuICAgICAgfVxyXG4gICAgICAvLyByZW1vdmUgbmV3XHJcbiAgICAgIGlmICh1c2VyLmlzTmV3KSB7XHJcbiAgICAgICAgJHNjb3BlLnVzZXJzLnNwbGljZShpLCAxKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9O1xyXG5cclxuICAvLyBzYXZlIGVkaXRzXHJcbiAgJHNjb3BlLnNhdmVUYWJsZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgdmFyIHJlc3VsdHMgPSBbXTtcclxuICAgIGZvciAodmFyIGkgPSAkc2NvcGUudXNlcnMubGVuZ3RoOyBpLS07KSB7XHJcbiAgICAgIHZhciB1c2VyID0gJHNjb3BlLnVzZXJzW2ldO1xyXG4gICAgICAvLyBhY3R1YWxseSBkZWxldGUgdXNlclxyXG4gICAgICBpZiAodXNlci5pc0RlbGV0ZWQpIHtcclxuICAgICAgICAkc2NvcGUudXNlcnMuc3BsaWNlKGksIDEpO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIG1hcmsgYXMgbm90IG5ld1xyXG4gICAgICBpZiAodXNlci5pc05ldykge1xyXG4gICAgICAgIHVzZXIuaXNOZXcgPSBmYWxzZTtcclxuICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gJHEuYWxsKHJlc3VsdHMpO1xyXG4gIH07XHJcbn0pO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2pzL2FwcC5qc1xuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9